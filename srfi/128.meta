;; This file was automatically generated by the Cyclone Scheme compiler
((with-hash-salt lambda (expr$194$211 rename$195$210 compare$196$209) (car ((lambda (tmp$213$229) (if tmp$213$229 tmp$213$229 (cons (error "no expansion for" expr$194$211) #f))) ((lambda (v.1$202$215) (if (pair? v.1$202$215) ((lambda (v.2$203$217) ((lambda (new-salt$218) ((lambda (v.3$204$219) (if (pair? v.3$204$219) ((lambda (v.4$205$221) ((lambda (hash-func$222) ((lambda (v.5$206$223) (if (pair? v.5$206$223) ((lambda (v.6$207$225) ((lambda (obj$226) ((lambda (v.7$208$227) (if (null? v.7$208$227) (cons (cons-source (rename$195$210 (quote parameterize)) (cons-source (cons-source (cons-source (rename$195$210 (quote %salt%)) (cons-source new-salt$218 (quote ()) (quote (new-salt))) (quote (%salt% new-salt))) (quote ()) (quote ((%salt% new-salt)))) (cons-source (cons-source hash-func$222 (cons-source obj$226 (quote ()) (quote (obj))) (quote (hash-func obj))) (quote ()) (quote ((hash-func obj)))) (quote (((%salt% new-salt)) (hash-func obj)))) (quote (parameterize ((%salt% new-salt)) (hash-func obj)))) #f) #f)) (cdr v.5$206$223))) v.6$207$225)) (car v.5$206$223)) #f)) (cdr v.3$204$219))) v.4$205$221)) (car v.3$204$219)) #f)) (cdr v.1$202$215))) v.2$203$217)) (car v.1$202$215)) #f)) (cdr expr$194$211))))) (hash-salt lambda (expr$167$178 rename$168$177 compare$169$176) (car ((lambda (tmp$180$184) (if tmp$180$184 tmp$180$184 (cons (error "no expansion for" expr$167$178) #f))) ((lambda (v.1$175$182) (if (null? v.1$175$182) (cons (cons-source (rename$168$177 (quote %salt%)) (quote ()) (quote (%salt%))) #f) #f)) (cdr expr$167$178))))) (hash-bound lambda (expr$140$151 rename$141$150 compare$142$149) (car ((lambda (tmp$153$157) (if tmp$153$157 tmp$153$157 (cons (error "no expansion for" expr$140$151) #f))) ((lambda (v.1$148$155) (if (null? v.1$148$155) (cons 33554432 #f) #f)) (cdr expr$140$151))))) (comparator-if<=> lambda (expr$5$39 rename$6$38 compare$7$37) (car ((lambda (tmp$41$65) (if tmp$41$65 tmp$41$65 ((lambda (tmp$67$95) (if tmp$67$95 tmp$67$95 (cons (error "no expansion for" expr$5$39) #f))) ((lambda (v.1$13$69) (if (pair? v.1$13$69) ((lambda (v.2$14$71) ((lambda (comparator$72) ((lambda (v.3$15$73) (if (pair? v.3$15$73) ((lambda (v.4$16$75) ((lambda (a$76) ((lambda (v.5$17$77) (if (pair? v.5$17$77) ((lambda (v.6$18$79) ((lambda (b$80) ((lambda (v.7$19$81) (if (pair? v.7$19$81) ((lambda (v.8$20$83) ((lambda (less$84) ((lambda (v.9$21$85) (if (pair? v.9$21$85) ((lambda (v.10$22$87) ((lambda (equal$88) ((lambda (v.11$23$89) (if (pair? v.11$23$89) ((lambda (v.12$24$91) ((lambda (greater$92) ((lambda (v.13$25$93) (if (null? v.13$25$93) (cons (cons-source (rename$6$38 (quote cond)) (cons-source (cons-source (cons-source (rename$6$38 (quote =?)) (cons-source comparator$72 (cons-source a$76 (cons-source b$80 (quote ()) (quote (b))) (quote (a b))) (quote (comparator a b))) (quote (=? comparator a b))) (cons-source equal$88 (quote ()) (quote (equal))) (quote ((=? comparator a b) equal))) (cons-source (cons-source (cons-source (rename$6$38 (quote <?)) (cons-source comparator$72 (cons-source a$76 (cons-source b$80 (quote ()) (quote (b))) (quote (a b))) (quote (comparator a b))) (quote (<? comparator a b))) (cons-source less$84 (quote ()) (quote (less))) (quote ((<? comparator a b) less))) (cons-source (cons-source (rename$6$38 (quote else)) (cons-source greater$92 (quote ()) (quote (greater))) (quote (else greater))) (quote ()) (quote ((else greater)))) (quote (((<? comparator a b) less) (else greater)))) (quote (((=? comparator a b) equal) ((<? comparator a b) less) (else greater)))) (quote (cond ((=? comparator a b) equal) ((<? comparator a b) less) (else greater)))) #f) #f)) (cdr v.11$23$89))) v.12$24$91)) (car v.11$23$89)) #f)) (cdr v.9$21$85))) v.10$22$87)) (car v.9$21$85)) #f)) (cdr v.7$19$81))) v.8$20$83)) (car v.7$19$81)) #f)) (cdr v.5$17$77))) v.6$18$79)) (car v.5$17$77)) #f)) (cdr v.3$15$73))) v.4$16$75)) (car v.3$15$73)) #f)) (cdr v.1$13$69))) v.2$14$71)) (car v.1$13$69)) #f)) (cdr expr$5$39))))) ((lambda (v.14$26$43) (if (pair? v.14$26$43) ((lambda (v.15$27$45) ((lambda (a$46) ((lambda (v.16$28$47) (if (pair? v.16$28$47) ((lambda (v.17$29$49) ((lambda (b$50) ((lambda (v.18$30$51) (if (pair? v.18$30$51) ((lambda (v.19$31$53) ((lambda (less$54) ((lambda (v.20$32$55) (if (pair? v.20$32$55) ((lambda (v.21$33$57) ((lambda (equal$58) ((lambda (v.22$34$59) (if (pair? v.22$34$59) ((lambda (v.23$35$61) ((lambda (greater$62) ((lambda (v.24$36$63) (if (null? v.24$36$63) (cons (cons-source (rename$6$38 (quote comparator-if<=>)) (cons-source (cons-source (rename$6$38 (quote make-default-comparator)) (quote ()) (quote (make-default-comparator))) (cons-source a$46 (cons-source b$50 (cons-source less$54 (cons-source equal$58 (cons-source greater$62 (quote ()) (quote (greater))) (quote (equal greater))) (quote (less equal greater))) (quote (b less equal greater))) (quote (a b less equal greater))) (quote ((make-default-comparator) a b less equal greater))) (quote (comparator-if<=> (make-default-comparator) a b less equal greater))) #f) #f)) (cdr v.22$34$59))) v.23$35$61)) (car v.22$34$59)) #f)) (cdr v.20$32$55))) v.21$33$57)) (car v.20$32$55)) #f)) (cdr v.18$30$51))) v.19$31$53)) (car v.18$30$51)) #f)) (cdr v.16$28$47))) v.17$29$49)) (car v.16$28$47)) #f)) (cdr v.14$26$43))) v.15$27$45)) (car v.14$26$43)) #f)) (cdr expr$5$39))))))